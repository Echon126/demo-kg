package com.example.demo.utils;

/**
 * @email lidaihu@cogiot.com
 * @author:lidaihu
 * @date: 2021/3/10
 * @time: 16:01
 */
public enum ErrorCode {
    SERVICE_OK(20000, "success."),
    SYSTEM_ERROR(20001, "the system error."),
    QUERY_EMPTY(20002, "query result is empty."),
    DON_NOT_HAVE_PERMISSION(20003, "do not have permission."),
    ACCOUNT_OR_PASSWORD_ERROR(20004, "account or password is not right."),
    ACCOUNT_LOCKED(20005, "account is locked, please wait 30 min."),
    AUTHENTICATION_FAILED(20006, "authentication failed"),
    DATA_IS_EXIST(20007, "data is exist."),
    ACCOUNT_IS_EXIST(20008, "account is exist."),
    EMAIL_ALREADY_USED(20009, "The email has already been used."),
    EMAIL_UPDATE_ERROR(20010, "This user also subscribe some other service, Please contact customer service personnel."),
    USERNAME_ALREADY_USED(20011, "The username has already been used."),
    PARTIAL_SUCCESS(20012, "Partial success."),
    USER_IS_NOT_ROOT(20100, "user is not root."),
    USER_IS_NOT_ADMIN(20100, "user is not admin."),
    USER_ID_IS_NOT_EXIST(20101, "user id is not exist."),
    USER_NO_PERMISSION_RESET_PWD(20102, "The account does not have permission to reset this user password."),
    USER_NO_PERMISSION(20102, "The account does not have permission."),
    USER_UPDATE_ERROR(20103, "user update error."),
    USER_CHANGE_OLD_PWD_ERROR(20104, "user old password error."),
    USER_FIND_EMPTY(20105, "user find empty."),
    USER_NO_ROLE(20106, "user is not root and don't have role."),
    USER_DELETE_ERROR(20107, "user delete error."),
    DEVICE_INFO_UPDATE_FAIL(20108, "update device info fail."),
    USER_NOT_EXIT_ROLE_ID(20109, "The account does not have an incoming role id."),
    DEVICE_TYPE_CAPI_UPDATE_FAIL(20110, "capi update device type fail."),
    DEVICE_DELETE_FAIL(20112, "device delete fail."),
    DEVICE_CAPI_DELETE_FAIL(20113, "device delete from capi fail."),
    DEVICE_EXIT(20114, "Device of the type is exist."),
    SUB_DEVICE_EXIT(20115, "Subordinate Device exists or online."),
    DEVICE_LOCATION_UPDATE_FAIL(20116, "Device location update failed."),
    SUB_DEVICE_DELETE_FAIL(20117, "subDevice delete fail."),
    SUB_DEVICE_NOT_EXIT(20118, "subDevice is not exit"),
    USER_NOT_ALLOW_DELETE(20119, "user is root, not allow delete."),
    USER_FIND_SUBSCRIBE_FAIL(20120, "user query subscribe fail."),
    USER_NOT_SUBSCRIBE_THINGFRATER(20121, "user not subscribe."),
    USERNAME_CHECK_EXIST_FAIL(20122, "username check exist fail."),
    SUPPER_USER_CHANGE_PWD_SELF(20123, "supper user change pwd only by self."),
    DEVICE_TYPE_CHANGE_FAIL(20123, "Device change type fail."),
    USER_NOT_EXIST(20124, "user is not exist."),
    EMAIL_CHECK_EXIST_FAIL(20125, "email check exist fail."),
    ROLE_ADD_FAIL(20200, "role add fail."),
    ROLE_UPDATE_FAIL(20201, "role update fail."),
    ROLE_NAME_EXIST(20202, "role name is exist."),
    ROLE_DELETE_FAILED(20203, "Role delete no failed"),
    ROLE_DELETE_CHARACTER_IN_USE(20204, "Character is in use"),
    ROLE_DELETE_WITHOUT_PERMISSIONS(20205, "User has no permissions"),
    DEVICE_PARAM_SHOW_SAVE_FAIL(20300, "device param show save fail."),
    DEVICE_PARAM_SHOW_DELETE_FAIL(20301, "device param show delete fail."),
    DEVICE_QUERY_EMPTY(20302, "device query empty."),
    DEVICE_GROUP_EXPORT_DEVICETYPEKEY_VALIDATE(20303, "device group param export deviceKeyType not match"),
    DEVICE_GROUP_EXPORT_DEVICE_PARAM_VALIDATE(20304, "excel data paramKey not match in device"),
    DEVICE_ID_MISSING(20305, "Missing deviceId"),
    DEVICE_ALLOCATE_FAIL(20306, "Failed to allocate device"),
    PASSWORD_IS_WRONG(20307, "Wrong password"),
    FILE_IS_EMPTY(20400, "the file is empty."),
    FILE_UPLOAD_FAILED(20401, "upload file failed."),
    FILE_INPUTSTREAM_INVALIDE(20402, "the file inputstream is invalide."),
    FILE_EXCEL_PARSE_FAILED(20420, "parse excel file failed."),
    FILE_EXCEL_IS_EMPTY(20421, "the excel is empty."),
    FILE_EXCEL_SHEET_INVALIDE(20422, "the excel sheet number can not more than 3."),
    FILE_EXCEL_SHEET_IS_EMPTY(20423, "the first sheet is empty."),
    FILE_EXCEL_SHEET_ROW_INVALIDE(20424, "the row number can not be 0 or more than 1000."),
    FILE_EXCEL_DEF_KEY_NOT_UNIQUE(20425, "this file has other device type key."),
    FILE_EXCEL_DEF_KEY_TEMPLATE_ERROR(20426, "device static property import template error."),
    FILE_UPDATE_UNCOMPLETE(20427, "the update process has not completed"),
    ORG_ADD_FAILED(20503, "Org delete failed"),
    ORG_SELECT_FAILED(20504, "Org select failed"),
    ORG_UPDATE_FAILED(20504, "Org update failed"),
    PROJECT_ADD_FAILED(20505, "Project delete failed"),
    PROJECT_REPORT_EXPORT_FAILED(20506, "Project delete failed"),
    SUB_DEVICE_UPDATE_FAILED(20600, "SubDevice update failed"),
    SEND_SHORT_MESSAGE_FAIL(20700, "Send short message fail."),
    SEND_SHORT_MESSAGE_PHONE_NULL(20700, "Send short message fail. phones is null or size is 0"),
    MQTT_GET_URL_FAIL(20800, "get mqtt url fail."),
    TRIGGER_CREATE_FAILED(21000, "trigger create failed"),
    FILE_QUERY_EMPTY(22000, "The file is not found"),
    FILE_DUPLICATE(22001, "The file name is duplicated"),
    FILE_DELETE_FAILED(22002, "File delete failed"),
    ATTR_PUBLISH_FAILED(22003, "Attribute publish failed"),
    MISSING_PARAMETERS(22004, "Missing parameters"),
    EMPTY_OPERMODUL(22005, "获取操作对象为空"),
    EMPTY_DEVICE_TYPE(22006, "获取设备类型为空"),
    LACK_OF_PARAMETERS(22007, "请求格式错误，缺少传参"),
    FILE_NAME_TOO_LONG(22008, "文件名称过长"),
    MIN_GREATER_THAN_MAX(22009, "最小值大于最大值"),
    MIN_MAX_MUST_BE_BOTH(22010, "必须同时输入最小值和最大值"),
    ORIGIN_ORG_IS_EQUALS_TARGET(22011, "源组织Id和目标组织id相同"),

    //启用7位错误码，1开头最后一个固定为未处理的系统异常
    GOLBAL_ERROR(1999999, "Application System Error"),
    //1100000-1000999 用于设备信息处理相关
    DEVICE_BATCH_CREATE_ERROR(1100002, "Batch Device Create Error"),
    DEVICE_EMPTY(1100003, "The device info is empty"),
    INVALID_SCHEDULE_TIME(1100004, "ota upgrade schedule time is invalid"),
    READ_FILE_ERROR(1100005, "read file error"),
    SYS_PARAM_NULL(1100006, "request params null"),
    DEVICE_NOT_EXISTS(1100007, "device is not exist"),
    DEVICE_TYPE_EXISTS(1100008, "device type has already exists"),
    DEVICE_BLACKLIST_IN_ERROR(1100009, "merge device into blacklist error"),
    DEVICE_BLACKLIST_OUT_ERROR(1100010, "merge device out from blacklist error"),
    DEVICE_TAGS_ADD_ERROR(1100011, "add device tags error"),
    DEVICE_TAGS_DEL_ERROR(1100012, "delete device tags error"),
    MANAGEMENT_PART_SUCCESS(1100013, "merge part devices into management success"),
    DEVICE_IS_ONLINE(1100014, "device is online"),
    DEVICE_UPDATE_ORG_ID_NO_PERMISSIONS(1100015, "device no permissions to update this orgId."),
    DEVICE_ID_NOT_EMPTY(1100016, "device id not empty."),

    DEVICE_PARAM_ADD_ERROR(1100017, "device param add failed."),
    DEVICE_PARAM_EDIT_ERROR(1100018, "device param edit failed."),
    DEVICE_PARAM_DEL_ERROR(1100019, "device param delete failed."),
    DEVICE_SEND_INSTRUCTION_FAILED(1100020, "device send instruction failed."),
    DEVICE_TYPE_ID_INVALID(1100021, "device type id is invalid."),
    ONLINE_DEVICE_NOT_ALLOW_DELETE(1100022, "online device does not allow delete."),
    HAVING_SUB_DEVICE_NOT_ALLOW_DELETE(1100023, "device having subDevices does not allow delete."),
    THING_FRATER_IS_SUBSCRIBED(1100024, "物孪生应用已经订阅"),
    THING_FRATER_HAS_UNSUBSCRIBED(1100025, "物孪生应用已经取消订阅"),
    THING_FRATER_CREATE_FAILD(1100026, "物创建失败"),
    THING_FRATER_APP_QUERY_EMPTY(1100027, "物孪生应用不存在"),
    DEVICE_TYPE_ID_ERROR(1100028, "device type id not empty."),
    DEVICE_PROFILE_HAS_ALREADY_USED(1100029, "device profile has already used."),
    DEVICE_KEY_EXIST(1100030, "设备唯一识别码已存在"),
    RULE_DETAIL_EMPTY(1100031,"规则详情为空"),
    DEVICE_COUNT_DIVISION_UNIT_NOT_EXIST(1100032,"设备统计区分粒度不存在"),
    EVENT_NOT_EXITENCE(1100033,"当前用户或设备下此事件不存在"),
    DEVICE_TYPE_NOT_PUBLISHED_OR_SUBSCRIBED(1100034,"不是发布或订阅的物"),

    //1101000-1001999 用于org信息处理相关
    ORG_GET_RELATION_NULL(1101001, "Get org relation list null."),
    SUB_ORG_CAN_NOT_FIND(1101002, "在该组织下找不到此子组织"),
    ROLE_QUERY_EMPTY(1102001, "query role empty."),
    ORG_NAME_DUPLICATE(1102002, "org name duplicate."),
    ORG_NAME_MODIFY_NOT_ALLOW(1102003, "This org name can not allow modify."),
    ORGID_PARENTID_NOT_NULL(1102004, "orgId and parentId not null at the same time."),
    ORGID_QUERY_EMPTY(1102005, "org id query empty"),
    ORG_PARENTID_QUERY_EMPTY(1102006, "org parent id query empty."),
    ORG_NAME_EXIST(1102007, "org name is exist."),
    ORG_DELETE_WITHOUT_PERMISSIONS(1102008, "User has no permissions"),
    ORG_DELETE_WITH_DEVICE(1102009, "Org has device"),
    ORG_DELETE_FAILED(1102010, "Org delete failed"),
    ORG_DELETE_WITH_USER(1102011, "Org has user, delete failed."),
    ORG_DELETE_WITH_SUB_ORG(1102012, "Org has sub org, delete fail."),
    ORG_DELETE_WITH_DEVICE_TYPE(1102013, "Org has device type."),
    ORG_IS_WRONGFUL(1102014, "Org is wrongful."),
    ORG_CAPI_ERROR(1102015, "capi error."),
    //1102000-1002999 用于App版本处理相关
    APP_VERSION_DELETE_FAILED(1102000, "app version delete failed."),
    APP_VERSION_CHECK_FAILED(1102001, "app version lost."),
    //1103000-1003999 用于user处理相关
    USER_NOT_ALLOW_DEL_EMAIL(1103000, "user not allow delete email."),
    USER_IS_NOT_EXIST(1103000, "User is not exist."),
    USER_ACCOUNT_NOT_NULL(1103001, "account not null when create user."),
    USER_ACCOUNT_FORMAT_NOT_TRUE(1103001, "user account format not true."),
    USER_NOT_ROOT_USER(1103003, "user not have root user."),
    USER_NOT_PERMISSION_OPERATE_ORG(1103004, "user does not have permission to operate this org."),
    USER_QUERY_EMPTY(1103005, "user query empty."),
    PARENCE_DEVICE_ID_INVALID(1103006, "parentDeviceId is invalid."),
    PARAM_IDS_OVER_LIMIT(1103007, "参数ids长度超过200。"),
    // 1104000-1004999 操作日志相关

    // 1105000-1005999 物模型相关
    THING_FRATER_QUERY_EMPTY(1105000, "物模型不存在。"),
    THING_FRATER_RELEASE_DELETE_FAILED(1105001, "物模型已发布，不允许删除。"),
    THING_FRATER_PARAM_QUERY_EMPTY(1105002, "物模型参数不存在。"),
    THING_FRATER_PARAM_RELEASE_DELETE_FAILED(1105003, "物模型已发布, 参数不允许删除。"),
    SUB_THING_ID_LIST_INVALID(1105004, "子物id列表有误"),
    SUB_THING_CAN_NOT_ADD(1105005, "不能加入此物模型"),
    MODEL_ADD_TYPE_CANNOT_RECOGNIZE(1105006, "模型添加方式不能识别"),
    THING_FRATER_OPERATION_NO_AUTHORIZATION(1105007, "没有权限操作物模型"),
    SUB_THING_FRATER_QUERY_EMPTY(1105008, "子物模型不存在"),
    SUB_THING_FRATER_NOT_COMBIND(1105009, "子物模型未与主物模型绑定"),
    ID_EXISTS(1105010, "唯一标识符参数已经存在"),
    SUB_MODEL_CAN_NOT_DELETE(1105011, "子物模型不能删除"),
    MODEL_ATTRIBUTE_TYPE_CAN_NOT_BE_NULL(1105012, "静态属性类型不能为空"),
    MODEL_SUB_ID_CAN_NOT_BE_NULL(1105013, "所选子物模型不能为空"),
    MODEL_COPY_FAILD(1105014, "物模型复制失败"),

    THING_FUN_KEY_EXISTS(1105015, "物权限定义标识符不能重复"),
    LACK_OF_THING_FRATER_KEY(1105016, "Lack of thingFraterKey"),
    OPERATION_INVLID_FOR_PUBLISHED_RESOURCE(1105017, "published resource not allow operation"),
    CAN_NOT_DELETE_MODEL_DEVICE_TYPE_EXSIT(1105018, "物模型删除失败，存在物未删除"),
    THING_FRATER_NAME_REPEATED(1105019, "物模型名称重复"),
    DEVICE_TYPE_PUBLISHED(1105020,"物已经发布"),
    DEVICE_TYPE_NOT_BINDING(1105021,"物还未绑定"),
    NO_AUTHORIZATION_FOR_THING_FRATER_APP(1105022,"没有权限操作物孪生应用"),
    DEVICE_TYPE_ID_LIST_IS_EMPTY(1105023,"物id列表为空"),
    THING_FRATER_APP_NOT_EXIST(1105024,"物孪生应用不存在"),
    DEVICE_TYPE_IS_IN_SUBSCRIBE(1105025,"物已经添加到物孪生订阅中了"),
    DEVICE_TYPE_COPY_FAIL(1105026,"物复制失败"),
    NO_AUTHORIZATION_FOR_THING_FRATER(1105027,"没有权限操作物"),
    THING_FRATER_APP_PUBLISHED(1105028,"物孪生应用已经发布"),
    THING_FRATER_APP_NOT_SUBSCRIBE(1105029,"未订阅此物孪生应用"),
    THING_FRATER_APP_WITHOUT_DEVICE_TYPE(1105030,"物孪生应用需要绑定物"),
    THING_FRATER_PARAM_NAME_EXIST(1105031,"物模型属性名称已经存在"),
    CONTROL_COMMAND_NAME_EXISTS(1105032,"控制指令名称已经存在"),
    EVENT_NAME_EXISTS(1105033,"事件名称已经存在"),
    NO_AUTHORIZATION_FOR_DEVICE_TYPE(1105034,"没有权限操作这个物"),
    DEVICE_TYPE_NOT_EXISTS(1105035,"物不存在"),

    // 1106000-1006999 邮箱相关
    EMAIL_SEND_FAILED(1106000, "email send failed."),
    //924xxx 用于联通jasper平台对接
    JASPERCONNECTION_ROOT_ERROR(9240001, "call api error"),
    JASPERCONNECTION_SYSTEM_ERROR(9240002, "jasper api error"),
    //923xxxx 用于联通CMP平台对接
    CMPCONNECTION_NETWORK_ERROR(9230001, "network error"),
    CMPCONNECTION_UNICOMN_ERROR(9230002, "unicomn api error"),
    CMPCONNECTION_PARAMS_ERROR(9230003, "unicomn params error"),
    CMPCONNECTION_SIM_ERROR(9230004, "unicomn sim is not exist."),
    STATUS_MODIFICATION_FAILED(9230005, "Status modification failed."),
    QUERY_DEVICEDETAILS_FAILED(9230006, "Failed to query device details."),
    QUERY_SESSION_FAILED(9230007, "Failed to query session information."),
    OPERATOR_NOT_EXIST(9230008, "Operator does not exist."),
    SIM_IMPORT_ERROR(9230009, "Sim iccid import error"),
    SIM_STATUS_ERROR(9230010, "Sim status error"),
    SIM_STATUS_CHANGE_ILLEGAL(9230011, "Status change is illegal"),
    SIM_STATUS_CHANGE_FAILED(9230012, "Status change is failed"),
    FILE_SIZE_EXCEEDS_LIMIT(9230013, "File size exceeds limits"),
    INVALID_ICCID(9230014, "This iccidList is not belong user"),
    FILE_NOT_MATCH_TEMPLATE(9230015, "The uploaded file does not match the template"),
    INVALIDE_ICCID(9230016, "This sim iccid is not in account"),

    //925XXXX 用于电信CMP平台对接
    CTCMP_NETWORK_ERROR(9250001, "network error."),
    CTCMP_API_ERROR(9250002, "电信CMP平台调用失败"),
    CTCMP_PARAMS_ERROR(9250003, "ctcmp params error."),
    CTCMP_SIM_ERROR(9250004, "ctcmp sim is not exist."),
    CTCMP_SIM_STATE_CHANGE(9250005, "电信CMP平台卡状态变更失败"),
    CTCMP_SIM_PACKAGE_USED(9250006, "电信CMP平台获取流量情况失败"),
    CTCMP_SIM_CARD_MAIN_STATUS(9250007, "电信CMP平台获取sim卡状态失败"),
    CTCMP_SIM_ONLINE_STATUS(9250008, "电信CMP平台获取在线状态失败"),
    CTCMP_SIM_SMS_INFO(9250009, "电信CMP平台获取sim卡信息失败"),


    //926XXXX 用于移动onelink
    CM_ONELINK_BATCH_CHANGE_STATUS_CHECK_PARAM(9260001, "msisdns is null or size less than 10 or size over 100."),
    STATUS_IS_CHANGING(9260001, "Status is changing."),
    CM_GET_TOKEN_NULL(9260002, "cm get token ret is null."),
    CM_GET_TOKEN_ERROR(9260003, "cm get token error."),
    CM_TOKEN_OVERDUE(9260004, "cm token is not exist or overdue."),
    STATUS_IS_CHANGING_OR_ERROR(9260005, "Sim status error or status is changing."),

    MAIL_SEND_ERROR(9270000, "send mail failed."),

    SMS_SEND_ERROR(9280000, "send sms failed.");



    private String msg;
    private int code;

    private ErrorCode(int code, String msg) {
        this.code = code;
        this.msg = msg;
    }

    public String getMsg() {
        return this.msg;
    }

    public int getCode() {
        return this.code;
    }
}
